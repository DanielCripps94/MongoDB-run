{"ast":null,"code":"import React from './react';\nconst baseUrl = 'http://localhost:5000/';\nconst projectUrl = baseUrl + 'projects';\n\nconst get = url => fetch(url).then(resp => resp.json());\n\nconst getwithauth = url => fetch(url, {\n  headers: {\n    Authorization: localStorage.token\n  }\n}).then(resp => resp.json());\n\nconst post = (url, data) => fetch(url, {\n  method: 'POST',\n  headers: {\n    'Authorization': localStorage.token,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(data)\n}).then(resp => resp.json());\n\nconst patch = (url, data, id) => fetch(url + id, {\n  method: 'PATCH',\n  headers: {\n    Authorization: localStorage.token,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(data)\n}).then(resp => resp.json());\n\nconst destroy = (url, id) => fetch(url + id, {\n  method: \"DELETE\",\n  headers: {\n    Authorization: localStorage.token,\n    'Content-Type': 'application/json'\n  }\n});\n\nconst getPojects = get(projectUrl);\nexport default {\n  getPojects\n};","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MERN/MongoDB/mongodb-test-project/MongoDB-run/src/components/API.js"],"names":["React","baseUrl","projectUrl","get","url","fetch","then","resp","json","getwithauth","headers","Authorization","localStorage","token","post","data","method","body","JSON","stringify","patch","id","destroy","getPojects"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;AACA,MAAMC,UAAU,GAAGD,OAAO,GAAG,UAA7B;;AAEA,MAAME,GAAG,GAAIC,GAAD,IACJC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,CADR;;AAKI,MAAMC,WAAW,GAAIL,GAAD,IAChBC,KAAK,CAACD,GAAD,EAAM;AACPM,EAAAA,OAAO,EAAE;AACTC,IAAAA,aAAa,EAAEC,YAAY,CAACC;AADnB;AADF,CAAN,CAAL,CAIGP,IAJH,CAIQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAJhB,CADJ;;AAOA,MAAMM,IAAI,GAAG,CAACV,GAAD,EAAMW,IAAN,KACTV,KAAK,CAACD,GAAD,EAAM;AACPY,EAAAA,MAAM,EAAE,MADD;AAEPN,EAAAA,OAAO,EAAC;AACJ,qBAAiBE,YAAY,CAACC,KAD1B;AAEJ,oBAAe;AAFX,GAFD;AAMPI,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANC,CAAN,CAAL,CAOGT,IAPH,CAOQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPhB,CADJ;;AAUA,MAAMY,KAAK,GAAG,CAAChB,GAAD,EAAMW,IAAN,EAAYM,EAAZ,KACVhB,KAAK,CAACD,GAAG,GAAGiB,EAAP,EAAW;AACZL,EAAAA,MAAM,EAAE,OADI;AAEZN,EAAAA,OAAO,EAAC;AACJC,IAAAA,aAAa,EAAEC,YAAY,CAACC,KADxB;AAEJ,oBAAe;AAFX,GAFI;AAMZI,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANM,CAAX,CAAL,CAOGT,IAPH,CAOQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPhB,CADJ;;AAUA,MAAMc,OAAO,GAAG,CAAClB,GAAD,EAAMiB,EAAN,KACZhB,KAAK,CAACD,GAAG,GAAGiB,EAAP,EAAW;AACdL,EAAAA,MAAM,EAAE,QADM;AAEdN,EAAAA,OAAO,EAAC;AACNC,IAAAA,aAAa,EAAEC,YAAY,CAACC,KADtB;AAEN,oBAAe;AAFT;AAFM,CAAX,CADT;;AAUA,MAAMU,UAAU,GAAIpB,GAAG,CAACD,UAAD,CAAvB;AAEA,eAAe;AAAEqB,EAAAA;AAAF,CAAf","sourcesContent":["import React from './react'\n\nconst baseUrl = 'http://localhost:5000/'\nconst projectUrl = baseUrl + 'projects'\n\nconst get = (url) => \n        fetch(url)\n        .then(resp => resp.json())\n\n    \n    const getwithauth = (url) =>\n        fetch(url, {\n            headers: {\n            Authorization: localStorage.token\n            }\n        }).then(resp => resp.json()) \n    \n    const post = (url, data) => \n        fetch(url, {\n            method: 'POST',\n            headers:{\n                'Authorization': localStorage.token,\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(resp => resp.json())\n\n    const patch = (url, data, id) =>\n        fetch(url + id, {\n            method: 'PATCH',\n            headers:{\n                Authorization: localStorage.token,\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(resp => resp.json())\n\n    const destroy = (url, id) =>\n        fetch(url + id, {\n          method: \"DELETE\",\n          headers:{\n            Authorization: localStorage.token,\n            'Content-Type':'application/json'\n        },\n        })\n\n\n    const getPojects =  get(projectUrl)\n\n    export default { getPojects }\n"]},"metadata":{},"sourceType":"module"}